/*------------------------------------*\
    #GRID
\*------------------------------------*/

/* stylelint-disable */

$type: "vw"; // "vw" or "px"

@function get-grid-width($cols, $breakpoint: desktop, $side-gutter: 0, $offset: 0) {
    $column-width: map-get($grid-column, $breakpoint);
    $gutter-width: map-get($grid-gutter, $breakpoint);
    $offset-width: map-get($grid-offset, $breakpoint);

    @return max(0, $cols * $column-width + ($cols - 1) * $gutter-width) + $side-gutter * $gutter-width + $offset *
        $offset-width;
}

@function get-grid-vw($cols, $breakpoint: desktop, $side-gutter: 0, $offset: 0) {
    $g: get-grid-width($cols, $breakpoint, $side-gutter, $offset);

    @return vw(strip-units($g), $breakpoint);
}


@function get-grid-side-offset($bp: desktop, $side-gutter: 0, $offset: 0) {
    $mw: get-grid-vw(12);
    $g: calc((100vw - #{$mw}) / 2);

    @return $g;
}


.grid {
    margin-left: auto;
    margin-right: auto;
    position: relative;
    text-align: left;
    display: flex;

    @each $bp in (phone tablet desktop hd) {
        @include breakpoint($bp) {
            $p: get-grid-width(0, $bp, -0.5, 1);
            $mw: get-grid-width(map-get($grid-columns, $bp), $bp, 0, 2);

            @if ($type == "vw" and $bp == desktop) {
                $p: vw($p, $bp);
                $mw: vw($mw, $bp);
            }

            max-width: $mw;
            padding-left: $p;
            padding-right: $p;
        }
    }

    @include breakpoint(tablet) {
        max-width: 100%;
        width: 100%;
        padding-left: 16px;
        padding-right: 16px;
        display: flex;
        flex-direction: column;
    }

    @include breakpoint(phone) {
        max-width: 100%;
        width: 100%;
        padding-left: 16px;
        padding-right: 16px;
        display: flex;
        flex-direction: column;
    }
}

.flexgrid {
    display: flex;
    justify-content: space-between;
}

.centergrid {
    text-align: center;
    justify-content: center;
}

[class*="grid-"] {
    position: relative;
    text-align: left;
    vertical-align: top;
    display: inline-block;

    @include breakpoint(not-phone) {
        &.to-left {
            margin-left: 0;
        }
        &.to-right {
            margin-right: 0;
        }
    }

    @each $bp in phone tablet desktop hd {
        @include breakpoint($bp) {
            $m: if($type == "vw" and $bp == desktop, get-grid-vw(0, $bp, 0.5), get-grid-width(0, $bp, 0.5));
            margin-left: $m;
            margin-right: $m;
        }
    }

    @include breakpoint(phone) {
        width: 100%;
        margin-left: 0;
        margin-right: auto;
    }

    @include breakpoint(tablet) {
        width: 100%;
        margin-left: 0;
        margin-right: auto;
    }
}

@for $cols from 1 through map-get($grid-columns, desktop) {
    // phone
    @include breakpoint(phone) {
        @if map-get($grid-phone-pairs, $cols) {
            // $pw: calc(#{$cols / map-get($grid-columns, phone) * 100%} - #{map-get($grid-gutter, phone)});
            $pw: get-grid-vw(map-get($grid-phone-pairs, $cols), phone);
            .grid-#{$cols} {
                // width: $pw;
                width: 100%;
            }
        }

        %grid-p-#{$cols},
        .grid-p-#{$cols} {
            width: get-grid-vw($cols, phone);
        }
    }

    // tablet
    @include breakpoint(tablet) {
        @if map-get($grid-tablet-pairs, $cols) {
            $tw: get-grid-width(map-get($grid-tablet-pairs, $cols), tablet);
            @if ($type == "vw") {
                $tw: vw($tw, tablet);
            }
            .grid-#{$cols} {
                width: 100%;
            }
        }

        %grid-t-#{$cols},
        .grid-t-#{$cols} {
            width: if($type == "vw", get-grid-vw($cols, tablet), get-grid-width($cols, tablet));
        }
    }

    // desktop, hd
    @each $bp in desktop hd {
        @include breakpoint($bp) {
            %grid-#{$cols},
            .grid-#{$cols} {
                width: if($type == "vw" and $bp != hd, get-grid-vw($cols, $bp), get-grid-width($cols, $bp));
            }
        }
    }
}

@include breakpoint(phone) {
    .grid-p-half {
        width: get-grid-vw(map-get($grid-columns, phone) * 0.5, phone);
    }

    .grid-p-full {
        width: get-grid-vw(map-get($grid-columns, phone), phone);
        display: block;
    }
}
