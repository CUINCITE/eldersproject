.stack {
    &__gallery {
        position: relative;
    }



    &__content {
        position: relative;

        @include breakpoint(desktop) {
            display: grid;
            grid-template-rows: auto vw(167);
            grid-template-columns: 1fr 1fr;
        }
    }



    &__container {
        position: relative;


        @include breakpoint(not-desktop) {
            @include flex(column-reverse, space-between, flex-start);
        }
    }



    &__dots {
        @include flex(row, center, center);

        width: 100%;
        margin: rem(6) 0 rem(20);
        gap: rem(7);
    }



    &__dot {
        width: 6px;
        height: 6px;
        background-color: var(--color-grey200);
        border-radius: 50%;
        transition: background-color .4s $ease-custom;


        &.is-current {
            background-color: var(--color-black);
        }
    }



    &__cards {
        @include breakpoint(desktop) {
            position: absolute;
            pointer-events: none;
            z-index: 2;
            width: vw(585);
            height: vw(585);
            max-width: vh(585);
            max-height: vh(585);
            top: calc(#{rem(-80)} + 10 * 10px);
            right: 29rem;
        }


        @include breakpoint(hd) {
            right: 100%;
        }


        @include breakpoint(not-desktop) {
            width: calc(100vw - var(--GLOBAL-aside-width) - 1px);
        }
    }



    &__button {
        border-top: 1px solid $color-bg;

        @include breakpoint(desktop) {
            padding-inline: var(--grid-margin);
            width: 100%;
            padding-top: rem(14);


            .button {
                gap: rem(8);
                flex-direction: row;
                margin-left: auto;
                width: max-content;

                &__text {
                    display: inline-block;

                    &--duplicate {
                        position: absolute;
                        right: calc(100% + #{rem(8)});
                        top: 0;
                    }
                }

                &__main {
                    overflow: hidden;
                    position: relative;
                    gap: rem(12);
                    padding-inline: rem(2);
                }

                .arrow {
                    padding-left: 0;

                    &--extra {
                        top: rem(9);
                        right: calc(100% + #{rem(6)});
                    }
                }

                span i {
                    padding-left: 0;
                }
            }
        }


        @include breakpoint(not-desktop) {
            height: rem(125);
            padding: rem(13) var(--grid-margin);


            .button {
                flex-direction: column;
                align-items: flex-start;
                gap: 0;


                > .button__text { margin-top: rem(-4); margin-left: rem(-2); }
            }


            .button__main {
                flex-direction: row-reverse;
            }
        }
    }



    &__filler {
        @include breakpoint(desktop) {
            border-top: 1px solid $color-bg;
        }
    }



    @include breakpoint(desktop) {
        @for $i from 1 through 10 {
            &__names:has(li:nth-child(#{$i}):focus-within) + &__cards,
            &__names:has(li:nth-child(#{$i}):focus-within) + div > &__cards, {
                li:nth-last-child(-n + #{$i - 1} + 3) {
                    transform: rotate(-15deg) translate(-50vw, -50%);
                }
            }

            // &__names:has(li:nth-child(#{$i}):hover) + &__cards,
            // &__names:has(li:nth-child(#{$i}):hover) + div > &__cards, {
            //     li { transform: unset !important; }

            //     @for $j from 1 through 4 {
            //         li:nth-last-child(#{4 - $j + $i}) {
            //             transform: translate($j * -10px, $j * -10px) !important;
            //         }
            //     }

            //     li:nth-last-child(-n + #{$i - 1}) {
            //         transform: rotate(-15deg) translate(-50vw, -50%) !important;
            //     }
            // }



            &__names:has(li:nth-child(#{$i}).is-active) + div > &__cards,
            &__names:has(li:nth-child(#{$i}) a.is-visible) + div > &__cards,
            &__names:has(li:nth-child(#{$i}).is-active) ~ &__cards, {
                li { transform: unset !important; }

                @for $j from 1 through 4 {
                    li:nth-last-child(#{4 - $j + $i}) {
                        transform: translate($j * -10px, $j * -10px) !important;
                    }
                }

                li:nth-last-child(-n + #{$i - 1}) {
                    transform: rotate(-15deg) translate(-50vw, -50%) !important;
                }
            }
        }
    }
}
