@mixin default-transition($xOrigin: left, $yOrigin: top) {
    transition: transform var(--animation-time) var(--easing);
    transform-origin: $xOrigin $yOrigin;
    transform: translateY(var(--distance));
}

.lightbox {
    $animation-stagger: 0s;
    $content-delay: .75s;

    --easing: cubic-bezier(0, 0, 1, 1);
    --distance: 150vh;

    &.is-showing {
        --easing: cubic-bezier(0, .8, .35, 1);
        --animation-time: .9s;
    }

    &.is-closing {
        --easing: cubic-bezier(.65, .1, .4, .6);
        --animation-time: .8s;
    }



    &__overlay {
        position: absolute;
        inset: 0;
        background-color: var(--color-box);
        transition: opacity .1s linear;
        opacity: 0;


        .is-showing & {
            opacity: 1;
            transition-delay: .9s;
        }


        .is-closing & {
            transition-delay: 0s;
            opacity: 0;
        }
    }



    &__logo {
        @include z-index(logo, $lightbox-elements);
        @include default-transition;

        .is-showing & {
            transform: translateY(0);

            // transition-delay: $animation-stagger * 2;
            transition-delay: .05s;
        }

        .is-closing & {
            transform: translate(0, var(--distance)) rotate(25deg);

            transition-delay: 0s;
        }
    }



    &__illu {
        @include default-transition;

        --darken-stagger: .47s;


        .is-showing & {
            transform: translateY(0);
            transition-delay: $animation-stagger * 1;
        }

        .is-closing & {
            transform: translate(0, var(--distance)) rotate(25deg);

            transition-delay: 0s;
        }
    }



    &__main-bg {
        @include default-transition((right, bottom));

        --darken-stagger: .5s;


        .is-showing & {
            transform: translateY(0);
            transition-delay: $animation-stagger * 1.5;
        }

        .is-closing & {
            --animation-time: .65s;

            transform: translate(0, calc(var(--distance) - var(--lightbox-top-height))) rotate(-15deg);
            transition-delay: 0s;
        }
    }



    &__image {
        transition: transform var(--animation-time) var(--easing);
        transform: translateY(var(--distance)) rotate(-25deg);


        .is-showing &,
        .is-default & {
            // --easing: cubic-bezier(.2, .7, .35, .9);

            transition-duration: .9s;

            transform: translateY(0) rotate(-7.5deg);
            transition-delay: $content-delay;
        }


        .is-default & { transition-delay: 0s; }


        .is-closing &,
        .is-not-default & {
            --easing: cubic-bezier(.65, .1, .3, .6);

            transition-duration: .6s;
            transform: translate(0, calc(var(--distance) - var(--lightbox-top-height))) rotate(-25deg);
            transition-delay: 0s;
        }
    }



    &__slider {
        transition: transform var(--animation-time) var(--easing);
        transform: translateY(var(--distance)) rotate(-25deg);


        .is-showing &,
        .is-default & {
            transition-duration: .9s;
            transform: translateY(0) rotate(0deg);
            transition-delay: $content-delay;
        }


        .is-default & { transition-delay: 0s; }


        .is-closing &,
        .is-not-default & {
            --easing: cubic-bezier(.65, .1, .3, .6);

            transition-duration: .6s;
            transform: translate(0, calc(var(--distance) - var(--lightbox-top-height))) rotate(-25deg);
            transition-delay: 0s;
        }
    }



    &__header {
        @include default-transition(right, bottom);

        --darken-stagger: .4s;


        .is-showing & {
            transform: translateY(0);
        }

        .is-closing & {
            transform: translate(0, var(--distance)) rotate(-35deg);
        }
    }



    &__header-info {
        transition: transform var(--animation-time) var(--easing);
        transform: translateX(-120%);


        .is-showing & {
            transform: translateX(0);
            transition-duration: .9s;
            transition-delay: $content-delay;
        }
    }



    &__buttons {
        @include z-index(buttons, $lightbox-elements);

        transition: transform var(--animation-time) var(--easing);
        transform: translateY(var(--distance));


        .is-showing & {
            transform: translateY(0);
            transition-delay: $animation-stagger * 2.5;
        }

        .is-closing & {
            transform: translate(0, calc(var(--distance) - var(--lightbox-top-height)));
            transition-delay: 0s;
        }



        @for $i from 1 through 5 {
            li:nth-of-type(#{$i}) span {
                transition-duration: .75s;
                transition-delay: calc(1.1s + 0.05 * #{$i}s);
            }
        }


        button {
            span {
                display: inline-block;
                transition: transform var(--animation-time) var(--easing);
                transform: translateX(120%);


                .is-showing & {
                    transform: translateX(0);
                }
            }
        }
    }


    &__darken {
        transition: transform var(--animation-time) var(--easing);
        transform-origin: center top;
        transform: scaleY(1);


        .is-showing & {
            transition-duration: 1s;

            transform: scaleY(0);
            transition-delay: var(--darken-stagger);
        }
    }



    &__close {
        --animation-time: .25s;

        transition: opacity var(--animation-time) var(--easing);
        opacity: 0;


        .is-showing & {
            opacity: 1;
            transition-delay: .9s;
        }
    }
}
