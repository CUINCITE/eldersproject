.player {
    &__thumbnail {
        position: relative;
        z-index: 2;
        width: calc(var(--GLOBAL-aside-width) + 1px);
        height: var(--GLOBAL-player-height);
        display: grid;
        grid-template-rows: var(--top-panel-height) var(--bottom-panel-height);
        grid-template-columns: 100%;
        border-left: 1px solid var(--color-bg);
        flex-shrink: 0;
        pointer-events: all;
        cursor: pointer;
        background-color: var(--color-box);


        @include breakpoint(desktop) {
            transform: translateY(100%);


            body.is-fully-loaded & {
                transition: transform .6s $ease-custom;
                transform: translateY(0);
            }
        }


        @include breakpoint(phone) {
            @include flex(row-reverse, space-between, stretch);

            position: absolute;
            inset: auto auto 0 100%;
            height: var(--GLOBAL-aside-width);
            width: calc(var(--app-height) - var(--hamburgerbar-height));
            transform: rotate(-90deg);
            transform-origin: left bottom;
            border-left: none;
            background: none;
        }
    }



    &__marquee {
        @include font-size(16, 1);
        @include font-family(normal);
        @include font-settings(900, 900);
        @include flex(row, flex-start, center);

        background-color: var(--color-black);
        text-transform: uppercase;
        white-space: nowrap;
        padding-left: rem(6);
        padding-top: rem(4);
        overflow: hidden;
        width: 100%;
        transition: transform .7s $ease-out;


        @include breakpoint(not-desktop) {
            @include font-size(19, 1);
        }


        @include breakpoint(phone) {
            .is-expanded & {
                transform: translateY(100%);
            }
        }


        span {
            will-change: transform;
            padding-right: rem(15);
            animation: marquee 6s linear infinite;


            @include breakpoint(phone) {
                padding-right: 40px;
            }
        }
    }



    &__cassette {
        border-top: 1px solid var(--color-black);
        position: relative;


        &-bg, &-wrap {
            @include full;
        }


        &-bg {
            @include flex(row, space-evenly, center);

            z-index: 0;
        }


        &-wrap {
            z-index: 1;
            background-color: var(--cassette-bg-color);


            &--front {
                transition: background-color .01s;
                transition-delay: .6s;
            }
        }



        @include breakpoint(desktop) {
            overflow: hidden;
            border-top: 1px solid var(--color-black);
        }


        @include breakpoint(phone) {
            flex-basis: var(--bar-height);
            flex-shrink: 0;
            border-top: none;
            transition: transform .7s cubic-bezier(.5, 0, .1, 1);
            background-color: var(--color-box);


            &::before {
                content: "";
                position: absolute;
                inset: -7px 0 100%;
                background-color: var(--cassette-bg-color);
                border-bottom: 1px solid var(--color-bg);
            }


            .is-expanded & {
                transform: translateY(calc(-100vw + var(--GLOBAL-aside-width)));
            }
        }

        svg {
            width: 100%;
            height: 100%;


            path {
                animation: cassette 4s linear infinite;
                animation-play-state: paused;

                &:first-of-type {
                    transform-origin: 29px 29px;
                }


                &:last-of-type {
                    transform-origin: 81px 29px;
                }


                .player.is-mouseover & {
                    animation-play-state: running;
                    animation-duration: .8s;
                }


                .player.is-expanded &,
                .player-is-paused & {
                    animation-duration: 4s;
                    animation-play-state: paused;
                }


                .player.is-playing & {
                    animation-play-state: running;
                    animation-duration: 4s;
                }
            }
        }
    }
}