/* stylelint-disable */
@mixin full($pos: absolute) {
    position: $pos;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}


@function vw($size, $bp: desktop, $max: true) {
    $layouts: (
        desktop: 1280,
        tablet: 768,
        phone: 375
    );
    @if map-has-key($layouts, $bp) {
        @return calc(#{strip-units($size) / map-get($layouts, $bp)} * var(--vw));
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$bp}`.";
    }
}


@function trim-font($line-height, $capitals: 'true', $trim-value: $font-trim) {
    @if ($capitals == 'true') {
        @return (map-get($trim-value, "top-base") + (1 - $line-height) * 10 * map-get($trim-value, "top-increment")) (map-get($trim-value, "bottom-base-cap") + (1 - $line-height) * 10 * map-get($trim-value, "bottom-increment"));
    } @else {
        @return (map-get($trim-value, "top-base") + (1 - $line-height) * 10 * map-get($trim-value, "top-increment")) (map-get($trim-value, "bottom-base") + (1 - $line-height) * 10 * map-get($trim-value, "bottom-increment"));
    }
}


@function vh($size, $bp: desktop) {
    $layouts: (
        desktop: 720,
        tablet: 1024,
        phone: 667
    );
    @if map-has-key($layouts, $bp) {
        @return strip-units($size) / map-get($layouts, $bp) * 100vh;
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$bp}`.";
    }
}


@function z($list, $element) {
    $z-index: index($list, $element);
    @if $z-index { @return $z-index; }
    @warn 'There is no item "#{$element}" in this list; choose one of: #{$list}';
    @return null;
}


@mixin z-index($element, $list:$elements) {
    z-index: z($list, $element);
}


@mixin placeholder {
    &::-webkit-input-placeholder { @content; }
    &::-moz-placeholder { @content; } /* Firefox 19+ */
    &:-ms-input-placeholder { @content; } /* IE */
}


@function strip-units($value) {
    @return $value / ($value * 0 + 1);
}


$browser-context: 16px;
$line-height: 1.4;

@mixin font-size($size: $browser-context, $line: $line-height) {
    font-size: strip-units($size) + px;
    font-size: rem($size);
    @if (strip-units($line) < 4) {
        line-height: strip-units($line);
    } @else {
        line-height: (strip-units($line) / strip-units($size));
    }
}


@function rem($size) {
    @return (strip-units($size) / strip-units($browser-context)) + rem;
}


@mixin hover {
    .mod_no-touchevents &:hover,
    .mod_no-touchevents &:focus-visible,
    .accessibility &:focus {
        @content;
    }
}

@mixin accessibility {
    .accessibility &:focus-within,
    .accessibility &:focus {
        @content;
    }
}

@mixin v-center {
    display: flex;
    justify-content: center;
    flex-direction: column;
}


@mixin flex($direction: row, $justify: space-between, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}


@mixin letter-spacing($spacing, $font-size: 16) {
    // letter-spacing: $spacing * 1px;
    letter-spacing: strip-units($spacing) / strip-units($font-size) * 1em;
}



@mixin font-settings($wght: 800, $ital: 100) {
    font-variation-settings: 'wght' $wght, 'ital' $ital;
}


@mixin hoverable-link {
    overflow: hidden;
    position: relative;
    display: inline-block;

    & > span {
        display: inline-block;


        span {
            display: inline-block;


            &:last-of-type {
                position: absolute;
                bottom: 100%;
                left: 0;

                @media (hover: none) {
                    display: none;
                }

                @include breakpoint(phone) {
                    bottom: 120%;
                }
            }
        }
    }

    @include breakpoint(desktop) {
        @include hover {
            & > span {
                animation: hover-link .4s $ease-in-out forwards;
            }
        }

        &:focus > span {
            animation: hover-link .4s $ease-in-out forwards;
        }
    }

    .accessibility & span{ animation: none; }
}



@mixin menuShiftedElement {
    transition: transform .7s $ease-custom;

    body.has-menu-open & {
        transform: translateX(calc(var(--GLOBAL-content-width) * -1));
    }
}
/* stylelint-enable */
