// css variables could be used in other modules/components

@each $bp in (phone tablet desktop hd) {
    @include breakpoint($bp) {
        $offset-width: map-get($grid-offset, $bp);

        :root {
            --grid-margin: #{$offset-width};
        }
    }
}



.grid {
    --grid-column-start: auto;
    --grid-columns-span: auto;
    display: grid;
    grid-template-columns: repeat(12, minmax(0, 1fr));

    @each $bp in (phone tablet desktop hd) {
        @include breakpoint($bp) {
            $gutter-width: map-get($grid-gutter, $bp);
            $offset-width: map-get($grid-offset, $bp);

            grid-template-columns: repeat(map-get($grid-columns, $bp), minmax(0, 1fr));
            column-gap: $gutter-width;
            margin-left: $offset-width;
            margin-right: $offset-width;
        }
    }

    &--no-offset {
        margin-left: 0;
        margin-right: 0;
    }

    &--no-gutter {
        column-gap: 0;
    }

    &--row-start {
        @include breakpoint(desktop) {
            & div {
                grid-row-start: 1;
            }
        }
    }
}

@each $bp in (desktop, tablet, phone) {
    @include breakpoint($bp) {
        div[class*="col-span-"] {
            grid-column: var(--grid-column-start) / span var(--grid-columns-span);
        }
    }
}


@for $cols from 1 through map-get($grid-columns, desktop) {
    @include breakpoint(desktop) {
        .col-span-#{$cols} {
            --grid-columns-span: #{$cols};
        }

        .col-start-#{$cols} {
            --grid-column-start: #{$cols};
        }
    }

    @include breakpoint(tablet) {
        .col-span-#{$cols} {
            --grid-columns-span: #{map-get($grid-tablet-pairs, $cols)};
        }

        .col-start-#{$cols} {
            --grid-column-start: #{map-get($grid-tablet-pairs, $cols)};
        }
    }
}
